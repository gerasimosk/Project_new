// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Repositories;

namespace WebAPI.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211116151144_Innitial")]
    partial class Innitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("UserTitleId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserTitleId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2019, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Brian@example.com",
                            IsActive = true,
                            Name = "Brian",
                            Surname = "Glover",
                            UserTitleId = 1,
                            UserTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2020, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Samantha@example.com",
                            IsActive = true,
                            Name = "Samantha",
                            Surname = "Russell",
                            UserTitleId = 2,
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2018, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Adele@example.com",
                            IsActive = true,
                            Name = "Adele",
                            Surname = "Stephens",
                            UserTitleId = 4,
                            UserTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2019, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Bert@example.com",
                            IsActive = true,
                            Name = "Bert",
                            Surname = "Ruell",
                            UserTitleId = 4,
                            UserTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2019, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Tyrone@example.com",
                            IsActive = true,
                            Name = "Tyrone",
                            Surname = "Stanley",
                            UserTitleId = 5,
                            UserTypeId = 5
                        },
                        new
                        {
                            Id = 6,
                            EmailAddress = "Windsor@example.com",
                            IsActive = true,
                            Name = "Windsor",
                            Surname = "Ryan",
                            UserTitleId = 2,
                            UserTypeId = 5
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(2020, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Willa@example.com",
                            IsActive = true,
                            Name = "Willa",
                            Surname = "Walsh",
                            UserTitleId = 3,
                            UserTypeId = 4
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Edric@example.com",
                            IsActive = true,
                            Name = "Edric",
                            Surname = "Burrows",
                            UserTitleId = 4,
                            UserTypeId = 2
                        },
                        new
                        {
                            Id = 9,
                            EmailAddress = "Fletcher@example.com",
                            IsActive = true,
                            Name = "Fletcher",
                            Surname = "Abbott",
                            UserTitleId = 1,
                            UserTypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            EmailAddress = "Marc@example.com",
                            IsActive = true,
                            Name = "Marc",
                            Surname = "Atkinson",
                            UserTitleId = 2,
                            UserTypeId = 3
                        },
                        new
                        {
                            Id = 11,
                            BirthDate = new DateTime(2019, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Julia@example.com",
                            IsActive = true,
                            Name = "Julia",
                            Surname = "Blair",
                            UserTitleId = 2,
                            UserTypeId = 1
                        },
                        new
                        {
                            Id = 12,
                            BirthDate = new DateTime(2020, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Maxwell@example.com",
                            IsActive = true,
                            Name = "Maxwell",
                            Surname = "Jackson",
                            UserTitleId = 5,
                            UserTypeId = 5
                        },
                        new
                        {
                            Id = 13,
                            EmailAddress = "Rita@example.com",
                            IsActive = true,
                            Name = "Rita",
                            Surname = "Wheatly",
                            UserTitleId = 3,
                            UserTypeId = 3
                        },
                        new
                        {
                            Id = 14,
                            BirthDate = new DateTime(1018, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Pearl@example.com",
                            IsActive = true,
                            Name = "Pearl",
                            Surname = "Salazar",
                            UserTitleId = 4,
                            UserTypeId = 1
                        },
                        new
                        {
                            Id = 15,
                            BirthDate = new DateTime(2020, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "Zelene@example.com",
                            IsActive = true,
                            Name = "Zelene",
                            Surname = "Row",
                            UserTitleId = 2,
                            UserTypeId = 2
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.UserTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("UserTitle");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "userTitle 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "userTitle 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "userTitle 3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "userTitle 4"
                        },
                        new
                        {
                            Id = 5,
                            Description = "userTitle 5"
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("UserType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "a",
                            Description = "userType 1"
                        },
                        new
                        {
                            Id = 2,
                            Code = "b",
                            Description = "userType 2"
                        },
                        new
                        {
                            Id = 3,
                            Code = "c",
                            Description = "userType 3"
                        },
                        new
                        {
                            Id = 4,
                            Code = "d",
                            Description = "userType 4"
                        },
                        new
                        {
                            Id = 5,
                            Code = "e",
                            Description = "userType 5"
                        });
                });

            modelBuilder.Entity("WebAPI.Domain.User", b =>
                {
                    b.HasOne("WebAPI.Domain.UserTitle", "UserTitle")
                        .WithMany("User")
                        .HasForeignKey("UserTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Domain.UserType", "UserType")
                        .WithMany("User")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
